/*
 * tests.c
 *
 *  Created on: Apr 22, 2014
 *      Author: daisy
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "cluster.h"

typedef struct clusterlist {
	struct cluster *_cluster;
	struct clusterlist *next;
} clusterlist;

clusterlist *_clusterlisthead, *_clusterlisttail;

void LoadClusterData(char *filename) {
	_clusterlisthead = NULL;
	_clusterlisttail = NULL;
	FILE *fd;
	fd = fopen(filename, "r");
	if (fd == NULL){
		printf("error when loading cluster data...");
		return;
	}
	char buffer[256] = "";
	fgets(buffer, 256, fd);
	int num = atoi(buffer);
	if (num == 0)
		return;
	int i;
	for(i = 0; i < num; ++i) {
		fgets(buffer, 256, fd);
		if (strcmp(buffer, "start\n") != 0) {
			continue;
		}
		if (strcmp(buffer, "end\n") == 0)
			continue;
		fgets(buffer, 256, fd);
		int len = strlen(buffer);
		buffer[len-1] = '\0';
		char clustername[64];
		strcpy(clustername, buffer);
		cluster *_cluster = initialcluster(clustername);

		fgets(buffer, 256, fd);
		len = strlen(buffer);
		buffer[len-1] = '\0';
		char groups[128];
		strcpy(groups, buffer);
		clusteraddnode(_cluster, groups);
		while (fgets(buffer, 256, fd) != NULL) {
			len = strlen(buffer);
			buffer[len-1] = '\0';
			char nodeinfo[128] = "";
			strcpy(nodeinfo, buffer);
			char *parent = strtok(nodeinfo, " ");
			char *child = strtok(NULL, " ");
			while (child != NULL) {
				addnodechild(_cluster, child, parent);
				child = strtok(NULL, " ");
			}
		}
		if(_clusterlisthead == NULL) {
			_clusterlisthead = (clusterlist*)malloc(sizeof(clusterlist));
			_clusterlisthead->_cluster = _cluster;
			_clusterlisthead->next = NULL;
			_clusterlisttail = _clusterlisthead;
		}
		else {
			clusterlist *newcluster = (clusterlist*)malloc(sizeof(clusterlist));
			newcluster->_cluster = _cluster;
			newcluster->next = NULL;
			_clusterlisttail->next = newcluster;
			_clusterlisttail = _clusterlisttail->next;
		}
	}
}


int main() {
	printf("start loading cluster...\n");
	LoadClusterData("/home/daisy/Desktop/redis-2.8.8/cluster.cdb");
	if(_clusterlisthead != NULL) {
		printf("success in loading the cluster\n");
		printf("cluster name: %s\n", _clusterlisthead->_cluster->clustername);
	}
//	char *clustername = "MyCluster";
//	cluster* _cluster = initialcluster(clustername);
//	clusteraddnode(_cluster, "Group1 Group2 Group3");
//	addnodechild(_cluster, "127.0.0.1:6379", "Group1");
//	addnodechild(_cluster, "127.0.0.1:6380", "Group2");
//	addnodechild(_cluster, "127.0.0.1:6381", "Group3");
//
	char key[128]="";
	int i;
	printf("getting the leaf node of keys in cluster...\n");
	for (i = 0; i < 10; i++) {
		sprintf(key, "key%d", i);
		printf("%s is in: %s\n", key, getserver(_clusterlisthead->_cluster, key));
	}
	return 0;
}

